Index: src/DecimalComparator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/DecimalComparator.java	(date 1540402060337)
+++ src/DecimalComparator.java	(date 1540402060337)
@@ -0,0 +1,19 @@
+public class DecimalComparator {
+    public static void main(String[] args) {
+        System.out.println(areEqualByThreeDecimalPlaces(-3.1756, -3.175));
+        System.out.println(areEqualByThreeDecimalPlaces(3.175, 3.176));
+        System.out.println(areEqualByThreeDecimalPlaces(3.0, 3.0));
+        System.out.println(areEqualByThreeDecimalPlaces(3.1756, 3.1757));
+        System.out.println(areEqualByThreeDecimalPlaces(0.0, 0.0));
+    }
+    public static boolean areEqualByThreeDecimalPlaces(double value1, double value2){
+        int valueInt1 = (int) (value1 * 1000);
+        int valueInt2 = (int) (value2 * 1000);
+
+        if(valueInt1 == valueInt2){
+            return true;
+        } else {
+            return false;
+        }
+    }
+}
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(date 1540233908657)
+++ .idea/modules.xml	(date 1540233908657)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/HelloWorld.iml" filepath="$PROJECT_DIR$/HelloWorld.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1540411548854)
+++ .idea/vcs.xml	(date 1540411548854)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/EqualSumChecker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/EqualSumChecker.java	(date 1540402368825)
+++ src/EqualSumChecker.java	(date 1540402368825)
@@ -0,0 +1,10 @@
+public class EqualSumChecker {
+    public static void main(String[] args) {
+        System.out.println(hasEqualSum(1, 1, 1));
+        System.out.println(hasEqualSum(1, 1, 2));
+        System.out.println(hasEqualSum(1, -1, 0));
+    }
+    public static boolean hasEqualSum(int value1, int value2, int value3){
+        return (((value1 + value2) == value3) ? true : false);
+    }
+}
Index: src/TeenNumberChecker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/TeenNumberChecker.java	(date 1540402922698)
+++ src/TeenNumberChecker.java	(date 1540402922698)
@@ -0,0 +1,14 @@
+public class TeenNumberChecker {
+    public static void main(String[] args) {
+        System.out.println(hasTeen(9, 99, 19));
+        System.out.println(hasTeen(23, 15, 42));
+        System.out.println(hasTeen(22, 23, 34));
+    }
+    public static boolean hasTeen(int value1, int value2, int value3){
+        if(((value1 >= 13) && (value1 <= 19)) || ((value2 >= 13) && (value2 <= 19)) || ((value3 >= 13) && (value3 <= 19))) {
+            return true;
+        } else {
+            return false;
+        }
+    }
+}
Index: src/FeetToCentimeters.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/FeetToCentimeters.java	(date 1540407142742)
+++ src/FeetToCentimeters.java	(date 1540407142742)
@@ -0,0 +1,24 @@
+public class FeetToCentimeters {
+    public static void main(String[] args) {
+        System.out.println(calcFeetAndInchesToCentimeters(8, 4) + " cm");
+        System.out.println(calcFeetAndInchesToCentimeters(100) + " cm");
+    }
+    public static double calcFeetAndInchesToCentimeters(double feet, double inches){
+        if((feet >= 0) && ((inches >= 0) && (inches <= 12))) {
+            inches = (feet * 12.0) + inches;
+            return (inches * 2.54);
+        } else {
+            return -1;
+        }
+    }
+    public static double calcFeetAndInchesToCentimeters(double inches){
+        double feet;
+        if(inches >= 0) {
+            feet = (int) (inches / 12.0);
+            inches = (inches - (feet * 12.0));
+            return calcFeetAndInchesToCentimeters(feet, inches);
+        } else {
+            return -1;
+        }
+    }
+}
Index: src/MegaBytesConverter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/MegaBytesConverter.java	(date 1540319360582)
+++ src/MegaBytesConverter.java	(date 1540319360582)
@@ -0,0 +1,16 @@
+public class MegaBytesConverter {
+    public static void main(String[] args) {
+        printMegaBytesAndKiloBytes(2050);
+    }
+    public static void printMegaBytesAndKiloBytes(int kiloBytes){
+        //calculate
+        int megaBytes = kiloBytes / 1024;
+        int remainingKiloBytes = kiloBytes % 1024;
+        //print
+        if(kiloBytes < 0){
+            System.out.println("Invalid Value");
+        } else {
+            System.out.println(kiloBytes + " KB = " + megaBytes + " MB and " + remainingKiloBytes + " KB");
+        }
+    }
+}
Index: src/BarkingDog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/BarkingDog.java	(date 1540320405929)
+++ src/BarkingDog.java	(date 1540320405929)
@@ -0,0 +1,16 @@
+public class BarkingDog {
+    public static void main(String[] args) {
+        System.out.println(bark(true, 4));
+    }
+    public static boolean bark(boolean barking, int hourOfDay){
+        boolean barkingBool = false;
+
+        if(!((hourOfDay < 0) || (hourOfDay > 23))){
+            if(barking && ((hourOfDay < 8) || (hourOfDay > 22))){
+                barkingBool = true;
+            }
+        }
+
+        return barkingBool;
+    }
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1540233908515)
+++ .idea/misc.xml	(date 1540233908515)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="false" project-jdk-name="11" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: src/LeapYear.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/LeapYear.java	(date 1540395505571)
+++ src/LeapYear.java	(date 1540395505571)
@@ -0,0 +1,16 @@
+public class LeapYear {
+    public static void main(String[] args) {
+        System.out.println(isLeapYear(1800));
+    }
+    public static boolean isLeapYear(int year){
+        if(!((year >= 1) && (year <= 9999))) {
+            return false;
+        } else {
+            if(((year % 4) == 0) && ((year % 100) != 0) || ((year % 400) == 0)) {
+                return true;
+            } else {
+                return false;
+            }
+        }
+    }
+}
Index: HelloWorld.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- HelloWorld.iml	(date 1540233908363)
+++ HelloWorld.iml	(date 1540233908363)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: src/Hello.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Hello.java	(date 1540314477216)
+++ src/Hello.java	(date 1540314477216)
@@ -0,0 +1,61 @@
+public class Hello {
+
+    public static void main(String[] args){
+        System.out.println("********************Hello World!********************");
+        challenge1();
+        challenge2();
+        challenge3();
+        practice1();
+
+        displayHighScorePosition("Niraj", calculateHighScorePosition(50));
+    }
+
+    public static void displayHighScorePosition(String name, int position){
+        System.out.println(name + " managed to get into position " + position + " on the high score table.");
+    }
+
+    public static int calculateHighScorePosition(int score){
+        if(score > 1000) return 1;
+        else if((score > 500) && (score < 1000)) return 2;
+        else if((score > 100) && (score < 500)) return 3;
+        else return 4;
+    }
+
+    public static void practice1(){
+        int myInt = 50;
+        System.out.println(myInt);
+        myInt++;
+        System.out.println(myInt);
+        myInt--;
+        System.out.println(myInt);
+    }
+
+    public static void challenge3(){
+        System.out.println("********************Challenge3********************");
+
+        char copyrightChar = '\u00A9';
+        char rupeeIndian = '\u20B9';
+        char registeredChar = '\u00AE';
+        System.out.println("Unicode output was: " + copyrightChar + rupeeIndian + registeredChar);
+    }
+
+    public static void challenge2(){
+        System.out.println("********************Challenge2********************");
+
+        int numOfPounds = 207;
+        double poundToKilogramMultiplier = 0.453_592_37d;
+        double numOfKilograms = numOfPounds * poundToKilogramMultiplier;
+        System.out.println(numOfKilograms);
+    }
+
+    public static void challenge1(){
+        System.out.println("********************Challenge1********************");
+
+        byte myByte = 127;
+        short myShort = 32_276;
+        int myInt = 34_32_276;
+        long myLong = 50000L + 10L * (myByte + myShort + myInt);
+
+        System.out.println(myLong);
+    }
+}
